<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">

    <servlet>
      <servlet-name>test</servlet-name><!--3 如果通过第二步,会根据servlet-name的名称寻找和它相同的servlet-name  -->
      <servlet-class>Test.util</servlet-class><!--4 最后根据这里的 包名.类名找到出口找到相应的Servlet类进行相关的操作  -->
      <init-param>
      	<param-name>pack</param-name>
      	<param-value>control</param-value><!--servlet启动时自动加载在Servlet的init()方法这样在Tomcat开启时自动加载,注意init()只加载一次  -->
      </init-param>
       <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
      <servlet-name>test</servlet-name><!-- 1  name的名称可以随意但是 必须在另一个name中有相同的名字如这里 作用是用于映射-->
      <url-pattern>*.do</url-pattern><!-- 2 这里的*.do的用处是根据action/href="xx.do"看后缀名是不是.do结尾的判定是否能够通过起到了过滤的作用  -->
    </servlet-mapping>
    
    <welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.xhtml</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>
<!-- welcome -file-list为默认的打开界面就是一打开localhost:8080就会出现的页面，这里需要注意的是打开
	localhost:8080的默认路径在Eclipse中需要自己手动的配置,这里如何配置默认路径:在Tomcat的安装路径下找到conf文件
	在下面的server.xml文件的末尾加上<Context path="" docBase="文件的位置/>",这里在Eclipse中的默认路径是
	在webapp右击选择Properties,这里还需要注意的是在webapp下面必须有WEB-INF文件夹，同时文件夹下面有classes文件夹
	,lib中放jar包要添加到buildPath下面,同时必须有web.xml
	-->
</web-app>
